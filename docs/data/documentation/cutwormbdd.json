{"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"CutwormBDD connects high-level "},{"identifier":"https:\/\/cucumber.io\/docs\/gherkin\/reference\/","type":"reference","isActive":true},{"type":"text","text":" feature specifications with tests."}]},{"type":"paragraph","inlineContent":[{"text":"BDD capabilities are added through annotation-like function calls inserted within a test. When a test is run, Cutworm validates that the test fulfilled the Gherkin scenario and records the result.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike Cucumber frameworks, Cutworm does not require splitting tests into independent steps, nor controls test execution. As a result, adapting existing tests is easy and Cutworm plays well with Xcode."}]},{"text":"Getting Started","type":"heading","anchor":"Getting-Started","level":2},{"type":"paragraph","inlineContent":[{"text":"To get a feel for how Cutworm works, open the CutwormBDDDemo project in Xcode and run the tests.","type":"text"}]},{"type":"heading","anchor":"Adding-a-test","text":"Adding a test","level":3},{"inlineContent":[{"text":"First, create a directory named ","type":"text"},{"type":"codeVoice","code":"features"},{"type":"text","text":" in your test target that contains the Gherkin feature definitions."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"features\/authentication.feature"}]},{"code":["Feature: Authentication","","    As a user, I want to be able to reliably log into my account","","    Scenario: Email login with valid credentials","        Given the user has an account","        When the user attempts to log in with their credentials","        Then the user is successfully logged in"],"syntax":"cucumber","type":"codeListing"},{"inlineContent":[{"text":"For Swift packages, the test target should be set up with a dependency to CutwormBDD and the features in resources:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":[".testTarget(","    name: \"MyTests\",","    dependencies: [\"CutwormBDD\"],","    resources: [.copy(\"features\")]","),"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Next, create a test case for a feature, and run the test once to generate the BDD template:"}],"type":"paragraph"},{"syntax":"swift","code":["class AuthenticationTests: XCTestCase, BDDTestCase {","    override func setUp() {","        super.setUp()","","        \/\/ Informs Cutworm which feature is under test","        Feature(\"Authentication\", in: .module)","    }","","    func testLogin() throws {","        \/\/ When executed, this replaces the body of `testLogin` with a BDD template.","        GenerateScenario_EXPERIMENTAL(\"Email login with valid credentials\")","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now that the template is generated, you can write your test, breaking down the parts of the test into steps:"}],"type":"paragraph"},{"code":["class AuthenticationTests: XCTestCase, BDDTestCase {","    override func setUp() {","        super.setUp()","","        \/\/ Informs Cutworm which feature is under test","        Feature(\"Authentication\", in: .module)","    }","","    func testLogin() throws {","        Scenario(\"Email login with valid credentials\")","","        Given(\"the user has an account\")","        \/\/ If an assertion failure occurs, or uncaught error is thrown during a step,","        \/\/ the step is failed and the scenario is consider failed.","        let user = try makeTestUser()","","        When(\"the user attempts to log in with their credentials\")","        loginScreen.typeCredentials(username: user.username, password: user.password)","","        let result = loginScreen.submit()","","        Then(\"the user is successfully logged in\")","","        XCTAssertEqual(result, .success)","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, run the tests. You’ll see the BDD results printed in the Console, and exported to a JSON file:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["Exporting BDD results for MyTests...","Feature: Authentication","Scenario: Email login with valid credentials","Steps:","✅ given the user has an account (0.00s)","✅ when the user attempts to log in with their credentials (0.00s)","✅ then the user is successfully logged in (0.00s)","","Writing results to JSON file...","BDD result JSON is saved at path ...json"]},{"type":"paragraph","inlineContent":[{"text":"In case the second step failed, the results would look like this:","type":"text"}]},{"code":["Feature: Authentication","Scenario: Email login with valid credentials","Steps:","✅ given the user has an account (0.00s)","❌ when the user attempts to log in with their credentials (0.04s)","⏩ then the user is successfully logged in (0.00s)"],"type":"codeListing","syntax":null},{"type":"heading","text":"Limitations","anchor":"Limitations","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Some Gherkin constructs are not yet supported, including ","type":"text"},{"code":"Scenario Outline","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Examples","type":"codeVoice"},{"type":"text","text":", "},{"code":"Background","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Rule"},{"text":", and tags.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Export is currently only to a JSON file. This can be limiting with some real device testing providers if they don’t provide access to the file.","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/CutwormBDD\/documentation\/CutwormBDD\/BDDTestCase"],"title":"Essentials"},{"title":"Utilities","identifiers":["doc:\/\/CutwormBDD\/documentation\/CutwormBDD\/BDDStepChainable"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"module","role":"collection","externalID":"CutwormBDD","roleHeading":"Framework","modules":[{"name":"CutwormBDD"}],"title":"CutwormBDD"},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/CutwormBDD\/documentation\/CutwormBDD","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/cutwormbdd"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A native, lightweight BDD testing library for Swift\/XCTest.","type":"text"}],"references":{"doc://CutwormBDD/documentation/CutwormBDD/BDDStepChainable":{"navigatorTitle":[{"text":"BDDStepChainable","kind":"identifier"}],"role":"symbol","title":"BDDStepChainable","type":"topic","url":"\/documentation\/cutwormbdd\/bddstepchainable","abstract":[{"text":"Allows chaining BDD steps inside a test to provide a natural reading experience.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/CutwormBDD\/documentation\/CutwormBDD\/BDDStepChainable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BDDStepChainable","kind":"identifier"}]},"doc://CutwormBDD/documentation/CutwormBDD/BDDTestCase":{"identifier":"doc:\/\/CutwormBDD\/documentation\/CutwormBDD\/BDDTestCase","abstract":[{"type":"text","text":"Give BDD superpowers to your test cases."}],"role":"symbol","title":"BDDTestCase","url":"\/documentation\/cutwormbdd\/bddtestcase","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BDDTestCase"}],"navigatorTitle":[{"kind":"identifier","text":"BDDTestCase"}]},"doc://CutwormBDD/documentation/CutwormBDD":{"role":"collection","url":"\/documentation\/cutwormbdd","identifier":"doc:\/\/CutwormBDD\/documentation\/CutwormBDD","kind":"symbol","abstract":[{"type":"text","text":"A native, lightweight BDD testing library for Swift\/XCTest."}],"title":"CutwormBDD","type":"topic"},"https://cucumber.io/docs/gherkin/reference/":{"url":"https:\/\/cucumber.io\/docs\/gherkin\/reference\/","identifier":"https:\/\/cucumber.io\/docs\/gherkin\/reference\/","type":"link","title":"Gherkin","titleInlineContent":[{"type":"text","text":"Gherkin"}]}}}